name: Build & Deploy to DEV from main branch - TESTING

env:

  # üñäÔ∏è EDIT your repository secrets to log into your OpenShift cluster and set up the context.
  # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
  # To get a permanent token, refer to https://github.com/redhat-actions/oc-login/wiki/Using-a-Service-Account-for-GitHub-Actions
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE: ${{ secrets.GRAD_NAMESPACE }}-dev

  # üñäÔ∏è EDIT to change the image registry settings.
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_REGISTRY_USER: ${{ github.actor }}
  IMAGE_REGISTRY_PASSWORD: ${{ github.token }}

  SPRING_BOOT_IMAGE_NAME: educ-grad-business-api-dc
  DOCKER_ARTIFACTORY_REPO: docker-remote.artifacts.developer.gov.bc.ca

  REPO_NAME: "educ-grad-business-api"
  APP_DOMAIN: ${{ secrets.APP_DOMAIN }}
  TAG: "latest"

  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows
  workflow_dispatch:

jobs:
  openshift-ci-cd:
    name: Build and deploy to OpenShift DEV - TESTING
    # ubuntu-20.04 can also be used.
    runs-on: ubuntu-18.04
    environment: dev

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Login to Artifactory
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_ARTIFACTORY_REPO }}
          username: ${{ secrets.DOCKER_ARTIFACTORY_USERNAME }}
          password: ${{ secrets.DOCKER_ARTIFACTORY_ACCESS_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

        # This is a separate action that sets up buildx runner
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        id: docker-build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}

        # https://github.com/redhat-actions/oc-login#readme
      - name: Test
        run: |
          echo ${{ steps.docker-build.outputs.metadata.image.name }}





